service: skills-api

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  serverless-offline:
    port: 1337

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    SKILLS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    RESOURCES_TABLE: ${self:service}-resources-${opt:stage, self:provider.stage}
    VOTES_TABLE: ${self:service}-votes-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SKILLS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.RESOURCES_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VOTES_TABLE}"
  region: us-west-2

functions:
  create:
    handler: skills/create.create
    events:
      - http:
          path: skills
          method: post
          cors: true
  list:
    handler: skills/list.list
    events:
      - http:
          path: skills
          method: get
          cors: true
  get:
    handler: skills/get.get
    events:
      - http:
          path: skills/{id}
          method: get
          cors: true
  update:
    handler: skills/update.update
    events:
      - http:
          path: skills/{id}
          method: put
          cors: true
  delete:
    handler: skills/delete.delete
    events:
      - http:
          path: skills/{id}
          method: delete
          cors: true
  resourceCreate:
    handler: skills/resources/create.create
    events:
      - http:
          path: skills/{id}/resources
          method: post
          cors: true
  resourcesGet:
    handler: skills/resources/list.list
    events:
      - http:
          path: skills/{id}/resources
          method: get
          cors: true
  resourceDelete:
    handler: skills/resources/delete.delete
    events:
      - http:
          path: skills/{id}/resources/{resourceId}
          method: delete
          cors: true
  voteCreate:
    handler: skills/resources/votes/create.create
    events:
      - http:
          path: skills/{id}/resources/{resourceId}/votes
          method: post
          cors: true
  votesGet:
    handler: skills/resources/votes/list.list
    events:
      - http:
          path: skills/{id}/resources/{resourceId}/votes
          method: get
          cors: true

resources:
  Resources:
    SkillsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.SKILLS_TABLE}
    ResourcesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: skillId
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: skillId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.RESOURCES_TABLE}
    VotesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: resourceId
            AttributeType: S
          -
            AttributeName: authorId
            AttributeType: S
        KeySchema:
          -
            AttributeName: resourceId
            KeyType: HASH
          -
            AttributeName: authorId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.VOTES_TABLE}
